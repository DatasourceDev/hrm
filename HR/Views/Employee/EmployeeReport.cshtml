@model  HR.Models.EmployeeReportModel
@using SBSModel.Models;
@using SBSModel.Common;
@using HR.Models;
@using HR.Common;
@using SBSResourceAPI;
@using SBSModel.Common;
@{
   ViewBag.Title = Resource.Employee_Report;
   var currentdate = StoredProcedure.GetCurrentDate();
}
@if ((Model.rights != null && Model.rights.Contains(UserSession.RIGHT_A)))
{
   <script type="text/javascript">
      $(function () {
         InitDatepicker();
         InitDatatable('empDataTable', null, null, 0, 'asc');

         $(function () {
            $("#btnExport").click(function () {
               $('#tabAction').val('export');
               var form = $("#theform");
               form.attr("action", "@Url.Action("EmployeeReport", "Employee")");
               form.method = 'get';
               form.submit();
               CloseMask();
            });

            $("#btnSearch").click(function () {
               $('#tabAction').val('');
               var form = $("#theform");
               form.attr("action", "@Url.Action("EmployeeReport", "Employee")");
               form.method = 'get';
               form.submit();
            });
         });
      })
   </script>
   <div class="pageheader">
      <h2>@Resource.Employee_Report</h2>

      <div class="breadcrumbs">
         <ol class="breadcrumb">
            <li>@Resource.You_Are_Here</li>
            <li><a href="@Url.Action("Index", "Home")">@Resource.DashBoard</a></li>
            <li class="active">@Resource.Employee_Report</li>
         </ol>
      </div>
   </div>
   <div class="main">
      <div class="row">

         <div class="col-md-12">
            @if (Model.result != null && Model.result.Code != 0)
            {
               if (Model.result.Code < 0)
               {
                  <div class="alert alert-red">
                     @Html.Raw(AppConst.GetMsg(Model.result))
                  </div>
               }
               else if (Model.result.Code > 0)
               {
                  <div class="alert alert-success">
                     @Html.Raw(AppConst.GetMsg(Model.result))
                  </div>
               }
            }

            @using (Html.BeginForm("EmployeeReport", "Employee", FormMethod.Get, new { @class = "form-horizontal", role = "form", id = "theform" }))
            {
               @*@Html.AntiForgeryToken()*@
               <section class="tile color transparent-black filter" id="secfilter">
                  <div class="tile-header transparent">
                     <h1 onclick="CollapseHeader(null)" style="cursor:pointer"><strong>@Resource.Apply_Filter</strong></h1>
                     <div class="controls">
                        <a href="#" class="minimize filter" id="btncollapse"><i class="fa fa-search  color-white"></i></a>
                     </div>
                  </div>
                  <div class="tile-body">
                     <div class="row">
                        <div class="col-md-4">
                           <div class="form-group">
                              <div class="col-sm-12">
                                 <label for="sDepartment" class="control-label">@Resource.Department</label>
                              </div>
                           </div>
                           <div class="form-group">
                              <div class="col-sm-12">
                                 <select class="chosen-select chosen-transparent form-control" id="Department" name="Department">
                                    @if (Model.departmentList != null)
                                    {
                                       foreach (var row in Model.departmentList)
                                       {
                                          if (Model.Department == NumUtil.ParseInteger(row.Value))
                                          {
                                             <option value="@(row.Value != null ? row.Value : "")" selected>@row.Text</option>
                                          }
                                          else
                                          {
                                             <option value="@(row.Value != null ? row.Value : "")">@row.Text</option>
                                          }
                                       }
                                    }
                                 </select>
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Department)
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="col-md-4">
                           <div class="form-group">
                              <div class="col-md-12">
                                 <label for="sFrom" class="control-label">@Resource.From</label>
                              </div>
                           </div>
                           <div class="form-group">
                              <div class="col-md-12">
                                 <input type="text" class="form-control input-datepicker" id="sFrom" name="sFrom" value="@Model.sFrom">
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.sFrom, "", new { id = "sFrom_Err" })
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="col-md-4">
                           <div class="form-group">
                              <div class="col-md-12">
                                 <label for="sTo" class="control-label">@Resource.To</label>
                              </div>
                           </div>
                           <div class="form-group">
                              <div class="col-md-12">
                                 <input type="text" class="form-control input-datepicker" id="sTo" name="sTo" value="@Model.sTo">
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.sTo, "", new { id = "sToErr" })
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="row">
                        <div class="col-sm-4">
                           <input type="hidden" name="tabAction" id="tabAction" />
                           <button type="button" id="btnSearch" class="btn btn-default">@Resource.Filter</button>
                           <a class="btn btn-default" href="#" target="_blank" id="btnExport" data-toggle="modal">@Resource.Export_To_Excel</a>
                        </div>
                     </div>
                  </div>
               </section>

               <section class="tile color transparent-black">
                  <div class="tile-header transparent">
                     <h1><strong>@Resource.Employee_Report</strong></h1>
                     <div class="controls">
                        <a href="#" class="minimize"><i class="fa fa-chevron-down color-white"></i></a>
                     </div>
                  </div>
                  <div class="tile-body">
                     <div class="table-responsive" style="overflow-x:auto">
                        <table class="table table-datatable table-custom" id="empDataTable">
                           <thead>
                              <tr>
                                 <th class="sort-alpha">@Resource.Employee_No</th>
                                 <th class="sort-alpha">@Resource.Employee_Name</th>
                                 <th class="sort-alpha">@Resource.DOB</th>
                                 <th class="sort-alpha">@Resource.Hired_Date</th>
                                 <th class="sort-alpha">@Resource.Nationality</th>
                                 <th class="sort-alpha">@Resource.Permit</th>
                                 <th class="sort-alpha">@Resource.Permit_No</th>
                                 <th class="sort-alpha">@Resource.Permit_Expiry_Date</th>
                                 <th class="sort-alpha">@Resource.Address</th>
                                 <th class="sort-alpha">@Resource.Status</th>
                           </thead>
                           <tbody>
                              @if (Model.employeeList != null)
                              {
                                 var i = 0;
                                 foreach (var row in Model.employeeList)
                                 {
                                    //var activated = false;
                                    Global_Lookup_Data emptype = null;
                                    Employment_History emphist = row.Employment_History.Where(w => w.Effective_Date <= currentdate).OrderByDescending(o => o.Effective_Date).FirstOrDefault();
                                    if (emphist != null)
                                    {
                                       emptype = new ComboService().GetLookup(emphist.Employee_Type);
                                       row.Hired_Date = emphist.Effective_Date;
                                       if (Model.Department.HasValue && emphist.Department_ID != Model.Department)
                                       {
                                          continue;
                                       }
                                    }

                                    String nationality = "";
                                    if (row != null && row.Nationality_ID != null)
                                    {
                                       nationality = Model.nationalityList.Where(w => w.Value == row.Nationality_ID.ToString()).FirstOrDefault().Text;
                                    }

                                    String Residential_Status = "";
                                    if (row != null && row.Residential_Status != null)
                                    {
                                       Residential_Status = Model.residentialStatusList.Where(w => w.Value == row.Residential_Status.ToString()).FirstOrDefault().Text;
                                    }

                                    <tr>
                                       <td>@row.Employee_No</td>
                                       <td>@UserSession.GetUserName(row.User_Profile)</td>
                                       <td>@DateUtil.ToDisplayDate(row.DOB)</td>
                                       <td>@DateUtil.ToDisplayDate(row.Hired_Date)</td>
                                       <td>@nationality</td>
                                       <td>@Residential_Status</td>
                                       <td>@row.PR_No</td>
                                       <td>@DateUtil.ToDisplayDate(row.PR_End_Date)</td>
                                       <td>@row.Residential_Address_1 @row.Postal_Code_1</td>
                                       <td>
                                          @if (row.User_Profile != null)
                                          {
                                             @StatusUtil.Get_Record_Status(row.User_Profile.User_Status)
                                          }
                                       </td>
                                    </tr>
                                          i++;
                                 }
                              }
                           </tbody>
                        </table>
                     </div>
                     <!-- tile widget -->
                     <!-- /tile widget -->
                  </div>

               </section>
            }
         </div>
      </div>
   </div>
}