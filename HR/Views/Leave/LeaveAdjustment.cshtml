@model HR.Models.LeaveAdjustmentViewModel
@using SBSModel.Models;
@using SBSModel.Common;
@using SBSResourceAPI;
@{
   ViewBag.Title = Resource.Leave_Adjustment;
}

@if ((Model.rights != null && Model.rights.Contains(UserSession.RIGHT_A)))
{
   <script type="text/javascript">

      function Start_Tour() {
         //New Leave creation tour
         var strtitle = "New Leave Adjustment ";
         var LAdjustTour = new Tour({
            storage: false,
            steps: [
            {
               element: "#Tour_Department_ID",
               title: strtitle,
               content: "Select the department if you want to adjust only for specific department.",
               onNext: function () {
               }
            },
            {
               element: "#Tour_Employee_Profile_ID",
               title: strtitle,
               content: "Select the employee if you want to adjust only for specific employee.",
               onNext: function () {
               }
            },
            {
               element: "#Tour_Leave_Config_ID",
               title: strtitle,
               content: "Select the leave type which you want to adjust.",
               onNext: function () {
               }
            },
            {
               element: "#Adjustment_Amount",
               title: strtitle,
               content: "Enter the number of days which you want to adjust.",
               onNext: function () {
               }
            },
            {
               element: "#Reason",
               title: strtitle,
               content: "Enter the reason why you need to do adjustment. Then save it",
               onNext: function () {
               }
            }
            ],
            onEnd: function () {
            }
         });
         LAdjustTour.init();
         LAdjustTour.start();
      }

      function Department_OnChange(opt) {
         var dID = $('#Department_ID').val();

         var id = 'Employee_Profile_ID';
         ShowMask();
         $.ajax({
            type: 'POST',
            url: '@Url.Action("LeaveAdjustmentReloadEmp", "Leave")',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ pDepartmentID: dID }),
            dataType: 'json',
            success: function (data) {
               var result = '';
               result += '<option value="0">ALL</option>';
               for (var i = 0, iL = data.length; i < iL; i++) {
                  result += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
               }
               $('#' + id).html(result);
               $('#' + id).trigger("chosen:updated");
               CloseMask();
            }
         });
      }

   </script>
   <div class="pageheader">
      @if (Model.aid == 0)
      {
         <h2>@Resource.Add_New_Leave_Adjustment <span></span></h2>
      }
      else
      {
         <h2>@Resource.Leave_Adjustment_Details<span></span></h2>
      }
      <div class="breadcrumbs">
         <ol class="breadcrumb">
            <li>@Resource.You_Are_Here</li>
            <li><a href="@Url.Action("Index", "Home")">@Resource.DashBoard</a></li>
            <li><a href="@Url.Action("Configuration", "Leave")">@Resource.Leave_Config</a></li>
            <li class="active">@Resource.Leave_Adjustment</li>
         </ol>
      </div>
   </div>

   using (Html.BeginForm("LeaveAdjustment", "Leave", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
   {
      <div class="main">
         <div class="row">
            <div class="col-md-12">
               @if (Model.result != null && Model.result.Code != 0)
               {
                  if (Model.result.Code < 0)
                  {
                     <div class="alert alert-red">
                        @Html.Raw(AppConst.GetMsg(Model.result))
                     </div>
                  }
                  else if (Model.result.Code > 0)
                  {
                     <div class="alert alert-success">
                        @Html.Raw(AppConst.GetMsg(Model.result))
                     </div>
                  }
               }
               <section class="tile color transparent-black">
                  <div class="tile-header transparent">
                     <h1><strong>@Resource.Leave_Adjustment</strong></h1>
                     <div class="controls">
                        <a href="#" class="minimize"><i class="fa fa-chevron-down color-white"></i></a>
                     </div>
                     <span class="label label-success tour-guide pull-right" onclick="Start_Tour();" style="cursor:pointer">@Resource.Guide</span>
                  </div>
                  <div class="tile-body">
                     @Html.AntiForgeryToken()
                     <input type="hidden" value="@Model.Create_By" name="Create_By" />
                     <input type="hidden" value="@Model.Create_On" name="Create_On" />
                     <input type="hidden" value="@Model.operation" name="operation" />
                     <input type="hidden" value="@Model.aid" name="aid" />
                     <div class="row">
                        <div class="col-md-6">
                           <div class="form-group">
                              <label for="Department_ID" class="col-sm-4 control-label">@Resource.Department</label>
                              <div class="col-sm-8" id="Tour_Department_ID">
                                 <select class="chosen-select chosen-transparent form-control" id="Department_ID" name="Department_ID" onchange="Department_OnChange(this)">
                                    @if (Model.Department_ID == 0)
                                    {
                                       <option value="0" selected>@Resource.ALL</option>
                                    }
                                    else
                                    {
                                       <option value="0">@Resource.ALL</option>
                                    }

                                    @if (Model.departmentList != null)
                                    {
                                       foreach (var row in Model.departmentList)
                                       {
                                          if (Model.Department_ID == NumUtil.ParseInteger(row.Value))
                                          {
                                             <option value="@row.Value" selected>@row.Text</option>
                                          }
                                          else
                                          {
                                             <option value="@row.Value">@row.Text</option>
                                          }
                                       }
                                    }

                                 </select>
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Department_ID)
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="col-md-6">
                           <div class="form-group">
                              <label for="Employee_Profile_ID" class="col-sm-4 control-label">@Resource.Employee</label>
                              <div class="col-sm-8" id="Tour_Employee_Profile_ID">
                                 <select class="chosen-select chosen-transparent form-control" id="Employee_Profile_ID" name="Employee_Profile_ID">
                                    @if (Model.Employee_Profile_ID == 0)
                                    {
                                       <option value="0" selected>@Resource.ALL</option>
                                    }
                                    else
                                    {
                                       <option value="0">@Resource.ALL</option>
                                    }

                                    @foreach (var row in Model.employeeList)
                                    {
                                       if (Model.Employee_Profile_ID == NumUtil.ParseInteger(row.Value))
                                       {
                                          <option value="@row.Value" selected>@row.Text</option>
                                       }
                                       else
                                       {
                                          <option value="@row.Value">@row.Text</option>
                                       }
                                    }
                                 </select>
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Employee_Profile_ID)
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="row">
                        <div class="col-md-6">
                           <div class="form-group">
                              <label for="Leave_Config_ID" class="col-sm-4 control-label">@Resource.Leave_Type</label>
                              <div class="col-sm-8" id="Tour_Leave_Config_ID">
                                 <select class="chosen-select chosen-transparent form-control" id="Leave_Config_ID" name="Leave_Config_ID">
                                    @foreach (var row in Model.leaveTypeList)
                                    {
                                       if (Model.Leave_Config_ID == NumUtil.ParseInteger(row.Value))
                                       {
                                          <option value="@(row.Value != null ? row.Value : "")" selected>@row.Text</option>
                                       }
                                       else
                                       {
                                          <option value="@(row.Value != null ? row.Value : "")">@row.Text</option>
                                       }
                                    }
                                 </select>
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Leave_Config_ID)
                                 </div>
                              </div>
                           </div>
                           <div class="form-group">
                              <label for="Adjustment_Amount" class="col-sm-4 control-label">@Resource.Adjustment_Amount</label>
                              <div class="col-sm-8">
                                 <input type="text" class="form-control" name="Adjustment_Amount" id="Adjustment_Amount" value="@Model.Adjustment_Amount">
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Adjustment_Amount, "", new { id = "Adjustment_Amount_Err" })
                                 </div>
                              </div>
                           </div>
                           <div class="form-group">
                              <label for="Reason" class="col-sm-4 control-label">@Resource.Reason</label>
                              <div class="col-sm-8">
                                 <textarea class="form-control" name="Reason" id="Reason" rows="5">@Model.Reason</textarea>
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Reason)
                                 </div>
                              </div>
                           </div>
                        </div>
                        <div class="col-md-6">
                           <div class="form-group">
                              <label for="Year_2" class="col-sm-4 control-label">@Resource.Year</label>
                              <div class="col-sm-8">
                                 <input type="text" class="form-control" name="Year_2" id="Year_2" value="@Model.Year_2">
                                 <div class="validation-error">
                                    @Html.ValidationMessageFor(m => m.Year_2)
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
               </section>
            </div>
         </div>
         <div class="row">
            <div class="col-md-12">
               <section class="tile color transparent-white">
                  <div class="tile-body">
                     <div class="row">
                        <div class="col-md-12">
                           @if (Model.rights != null && Model.rights.Contains(UserSession.RIGHT_U) | Model.rights.Contains(UserSession.RIGHT_C))
                           {
                              <button type="submit" class="btn btn-primary" onclick="return Confirm_Alert('@Model.aid');">@Resource.Save</button>
                           }
                           <a href="@Url.Action("Configuration", "Leave", new { tabAction = "adjust" })" class="btn btn-default">@Resource.Back</a>
                        </div>
                     </div>
                  </div>
               </section>
            </div>
         </div>
      </div>
   }
}

