@model  HR.Models.TsExViewModels
@using SBSModel.Models;
@using System.Text;
@using SBSModel.Common;
@using SBSWorkFlowAPI.Models;
@using SBSWorkFlowAPI.ModelsAndService;
@using SBSResourceAPI;
@using SBSWorkFlowAPI.Constants;

@{
   ViewBag.Title = Resource.My_Timesheet_Expenses;
   var currentdate = StoredProcedure.GetCurrentDate();
}

<script type="text/javascript">
   $(function () {
      InitDatepicker();
      //InitDatatable('tsexDataTable', null, null, 0, 'asc');
   })
   function Year_Onclick() {
      window.location = '@Url.Action("TsEx", "TsEx")?search_Year=' + $("#search_Year").val();
   }
</script>

<div class="pageheader">
   <h2>@Resource.My_Timesheet_Expenses<span></span></h2>
   <div class="breadcrumbs">
      <ol class="breadcrumb">
         <li>@Resource.You_Are_Here</li>
         <li><a href="@Url.Action("Index", "Home")">@Resource.DashBoard</a></li>
         <li class="active">@Resource.My_Timesheet_Expenses</li>
      </ol>
   </div>
</div>

<div class="main">
   <div class="row">
      <div class="col-md-12">
         @if (Model.result != null && Model.result.Code != 0)
         {
            <div class="alert @(Model.result.Code <= 0 ? "alert-red" : "alert-success")">
               @Html.Raw(AppConst.GetMsg(Model.result))
            </div>
         }

         @using (Html.BeginForm("TsEx", "TsEx", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
         {
            @Html.AntiForgeryToken()
            <section class="tile color transparent-black">
               <div class="tile-header transparent">
                  <h1><strong>@Resource.My_Timesheet_Expenses</strong></h1>
                  <div class="controls">
                     <a href="#" class="minimize"><i class="fa fa-chevron-down color-white"></i></a>
                  </div>
               </div>
               <div class="tile-body ">
                  <div class="row">
                     <div class="col-md-4">
                        <div class="form-group">
                           <div class="col-sm-12">
                              <label for="search_Year" class="control-label">@Resource.Year</label>
                           </div>
                        </div>
                        <div class="form-group">
                           <div class="col-sm-12">
                              <select class="chosen-select chosen-transparent form-control" id="search_Year" name="search_Year" onchange="Year_Onclick()">
                                 @for (var i = currentdate.Year - 3; i <= currentdate.Year + 1; i++)
                                 {
                                    <option value="@i" @(Model.search_Year == i ? "selected" : "")>@i</option>
                                 }
                              </select>
                              <div class="validation-error">
                                 @Html.ValidationMessageFor(m => m.search_Year)
                              </div>
                           </div>
                        </div>
                     </div>

                  </div>
                  <div class="table-responsive">
                     <table class="table table-datatable table-custom" id="tsexDataTable">
                        <thead>
                           <tr>
                              <th class="sort-alpha">@Resource.Year</th>
                              <th class="sort-alpha">@Resource.Month</th>
                              <th class="sort-alpha">@Resource.Doc_No</th>
                              <th class="sort-amount">@Resource.Expenses_Amount</th>
                              <th width="150px" class="sort-alpha">@Resource.Status</th>
                              <th width="110px" class="no-sort">@Resource.Action</th>
                           </tr>
                        </thead>
                        <tbody>
                           @for (var i = 1; i <= 12; i++)
                           {
                              TsEX row = new TsEX();
                              if (Model.timesheetExlist != null)
                              {
                                 row = Model.timesheetExlist.Where(w => w.Year == Model.search_Year && w.Month == i).FirstOrDefault();
                                 if (row == null)
                                 {
                                    row = new TsEX();
                                 }
                              }
                              <tr>
                                 <td>@Model.search_Year</td>
                                 <td>@DateUtil.GetFullMonth(i)</td>
                                 <td>
                                    @if (row.Expenses_Application != null)
                                    {
                                       @row.Expenses_Application.Expenses_No
                                    }
                                 </td>
                                 <td class="text-right">
                                    @if (row.Expenses_Application != null)
                                    {
                                       var amt = row.Expenses_Application.Expenses_Application_Document.Sum(s => s.Amount_Claiming.HasValue ? s.Amount_Claiming.Value : 0);
                                       @NumUtil.FormatCurrency(amt, 2)
                                    }
                                 </td>
                                 <td class="text-center">
                                    @if (row.Expenses_Application != null)
                                    {
                                       @StatusUtil.Get_Overall_Status(row.Expenses_Application.Overall_Status)
                                       if (!string.IsNullOrEmpty(row.Expenses_Application.Next_Approver))
                                       {
                                          @Html.Raw(GetNextApproverProfile(row.Expenses_Application.Next_Approver));
                                       }
                                    }
                                    else if (row.Time_Sheet != null)
                                    {
                                       @StatusUtil.Get_Overall_Status(row.Time_Sheet.Overall_Status)
                                    }
                                 </td>
                                 <td class="actions">
                                    @if (row.TsEx_ID == 0)
                                    {
                                       <a href="@Url.Action("TsExInfo", "TsEx", new { pY = Model.search_Year, pM = i, ctlr = ViewContext.RouteData.Values["controller"], ac = ViewContext.RouteData.Values["action"] })"><i class="fa fa-plus fa-2x"></i></a>
                                    }
                                    else
                                    {
                                       if ((row.Expenses_Application != null && row.Expenses_Application.Overall_Status == WorkflowStatus.Draft) | (row.Time_Sheet != null && row.Time_Sheet.Overall_Status == WorkflowStatus.Draft))
                                       {
                                          <a href="@Url.Action("TsExInfo", "TsEx", new { operation = UserSession.RIGHT_U, pID = row.TsEx_ID, ctlr = ViewContext.RouteData.Values["controller"], ac = ViewContext.RouteData.Values["action"] })"><i class="fa fa-edit fa-2x"></i></a>
                                       }
                                       else
                                       {
                                          <a href="@Url.Action("TsExInfo", "TsEx", new { operation = UserSession.RIGHT_U, pID = row.TsEx_ID, ctlr = ViewContext.RouteData.Values["controller"], ac = ViewContext.RouteData.Values["action"] })"><i class="fa fa-file-o fa-2x"></i></a>
                                       }
                                       @*<a target="_blank" href="@Url.Action("SendMail", "TsEx", new {  pID = row.TsEx_ID })"><i class="fa fa-envelope fa-2x"></i></a>*@
                                    }
                                 </td>
                              </tr>
                           }
                        </tbody>
                     </table>
                  </div>
               </div>
            </section>
         }
      </div>
   </div>
</div>
@functions {
   string GetNextApproverProfile(string AproverIDStr)
   {
      String NextApprover = string.Empty;
      var UserServ = new UserService();
      if (!string.IsNullOrEmpty(AproverIDStr))
      {
         var sp = AproverIDStr.Split('|');
         foreach (var IDStr in sp)
         {
            if (!string.IsNullOrEmpty(IDStr))
            {
               var ID = NumUtil.ParseInteger(IDStr);
               if (ID > 0)
               {
                  var user = UserServ.getUser(ID);
                  if (user != null)
                  {
                     NextApprover += "<br />";
                     NextApprover += "( " + AppConst.GetUserName(user) + " )";
                  }
               }
            }
         }
      }
      return NextApprover;
   }
}