@model  HR.Models.TimeArrangementViewModel
@using SBSModel.Models;
@using SBSModel.Common;
@using HR.Models;
@using SBSResourceAPI;
@{
    ViewBag.Title = Resource.Employee_Arrangement;
    string currdate = Model.search_Effective_Date;
    if (string.IsNullOrEmpty(Model.search_Effective_Date))
    {
        currdate = DateUtil.ToDisplayDate(StoredProcedure.GetCurrentDate());
    }
}
@if ((Model.rights != null && Model.rights.Contains(Operation.A)))
{
    <script type="text/javascript">
        $(function () {
            InitCollapseHeader(null);
            InitDatepicker();
            InitDatatable('empDataTable', null);

            if ('@ViewData.ModelState.IsValid'.toLowerCase() == "false") {
                $('#btnAddArg').get(0).click();
                Repeat_Onchange();
                Day_Of_Weeks_Onchange();
                if ('@Model.Arrangement_ID.HasValue'.toLowerCase() == "true")
                    $('#btnDelete').show();
            }

        });

        function AddArg_Onclick(empID, empName) {
            $("#btnAddArg").get(0).click();
            $("#operation").val('@Operation.C');
            $("#Employee_Profile_ID").val(empID);
            $("#Employee_Name").val(empName);

            $("#Arrangement_ID").val('');
            $("#Effective_Date").val('@currdate');
            $("#Repeat").get(0).checked = false;
            $("#Time_From").val('09:00');
            $("#Time_To").val('18:00');
            $("#Branch_ID").val('');
            $("#Remark").val('');
            $('#Branch_ID').trigger("chosen:updated");

            $('#btnDelete').hide();
            if ($("[name='Day_Of_Weeks']") != null) {
                for (var i = 0 ; i < $("[name='Day_Of_Weeks']").length; i++) {
                    $("[name='Day_Of_Weeks']").get(i).checked = false;
                }
            }
            $('.alert').remove();
            $('.validation-error').remove();
            Repeat_Onchange();
        }

        function EditArg_Onclick(tArgID, empID, empName, eff, rept, dayOfweek, tfrom, tTo, bid, remark) {
            $("#btnAddArg").get(0).click();
            $("#operation").val('@Operation.U');
            $("#Employee_Profile_ID").val(empID);
            $("#Employee_Name").val(empName);

            $("#Arrangement_ID").val(tArgID);
            $("#Effective_Date").val(eff);
            $("#Repeat").get(0).checked = rept;
            $("#Time_From").val(tfrom);
            $("#Time_To").val(tTo);
            $("#Branch_ID").val(bid);
            $("#Remark").val(remark);
            $('#Branch_ID').trigger("chosen:updated");

            $('#btnDelete').show();
            if (dayOfweek != null && dayOfweek.length > 0) {
                var dayOfweeks = dayOfweek.split('|');
                if (dayOfweeks.length > 0) {
                    for (var i = 0 ; i < $("[name='Day_Of_Weeks']").length; i++) {
                        $("[name='Day_Of_Weeks']").get(i).checked = false;
                        for (var j = 0 ; j < dayOfweeks.length; j++) {
                            if (dayOfweeks[j] != null && dayOfweeks[j] != '') {
                                if ((parseInt(dayOfweeks[j]) + 1) == i) {
                                    $("[name='Day_Of_Weeks']").get(i).checked = true;
                                    break;
                                }
                            }
                        }
                    }
                    Day_Of_Weeks_Onchange();
                }
            }
            $('.alert').remove();
            $('.validation-error').remove();
            Repeat_Onchange();
        }

        function Repeat_Onchange() {
            $("#divDayOfWeek").hide();
            var checked = $("#Repeat").get(0).checked;
            if (checked == true)
                $("#divDayOfWeek").show();
        }

        function Day_Of_Weeks_Onchange() {
            var haveAll = false;

            for (var i = 0; i < 8 ; i++) {
                var ds = $("#Day_Of_Weeks-" + i).get(0);
                if (i == 0) {
                    if (ds.checked == true) {
                        haveAll = true;
                    }
                }
                else {
                    if (haveAll == true) {
                        $("#Day_Of_Weeks-" + i).get(0).checked = false;
                        $("#Day_Of_Weeks-" + i).prop('disabled', true);
                    }
                    else {
                        $("#Day_Of_Weeks-" + i).prop('disabled', false);
                    }
                }
            }
        }
    </script>
    <div class="pageheader">
        <h2>@Resource.Employee_Arrangement<span></span></h2>
        <div class="breadcrumbs">
            <ol class="breadcrumb">
                <li>@Resource.You_Are_Here</li>
                <li><a href="@Url.Action("Index", "Home" )">@Resource.DashBoard</a></li>
                <li class="active">@Resource.Employee_Arrangement</li>
            </ol>
        </div>
    </div>
    <div class="main">
        <div class="row">
            <div class="col-md-12">
                @if (Model.result != null && Model.result.Code != 0)
                {
                    if (Model.result.Code < 0)
                    {
                        <div class="alert alert-red">
                          @Html.Raw(AppConst.GetMsg(Model.result))
                        </div>
                    }
                    else if (Model.result.Code > 0)
                    {
                        <div class="alert alert-success">
                           @Html.Raw(AppConst.GetMsg(Model.result))
                        </div>
                    }
                }
                <section class="tile color transparent-black filter" id="secfilter">
                    <div class="tile-header transparent">
                        <h1 onclick="CollapseHeader(null)" style="cursor:pointer"><strong>@Resource.Apply_Filter</strong></h1>
                        <div class="controls">
                            <a href="#" class="minimize filter" id="btncollapse"><i class="fa fa-search color-white"></i></a>
                        </div>
                    </div>
                    <div class="tile-body">
                        @using (Html.BeginForm("Arrangement", "Time", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
                        {
                            <div class="row">
                                @*<div class="col-md-4">
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <label for="search_Branch_ID" class="control-label">@Resource.Branch</label>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-12">
                                                <select class="chosen-select chosen-transparent form-control" id="search_Branch_ID" name="search_Branch_ID">
                                                    @foreach (var row in Model.cBranchlist)
                                                    {
                                                        <option value="@row.Value" @(Model.search_Branch_ID == NumUtil.ParseInteger(row.Value) ? "selected" : "")>@row.Text</option>
                                                    }
                                                </select>
                                                <div class="validation-error">
                                                    @Html.ValidationMessageFor(m => m.search_Branch_ID)
                                                </div>
                                            </div>

                                        </div>
                                    </div>*@
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-sm-12">
                                            <label for="search_Department_ID" class="control-label">@Resource.Department</label>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-12">
                                            <select class="chosen-select chosen-transparent form-control" id="search_Department_ID" name="search_Department_ID">
                                                @foreach (var row in Model.cDepartmentlist)
                                                {
                                                    <option value="@row.Value" @(Model.search_Department_ID == NumUtil.ParseInteger(row.Value) ? "selected" : "")>@row.Text</option>
                                                }
                                            </select>
                                            <div class="validation-error">
                                                @Html.ValidationMessageFor(m => m.search_Department_ID)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-sm-12">
                                            <label for="search_Effective_Date" class="control-label">@Resource.Effective_Date</label>
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-12 ">
                                            <input type="text" class="form-control input-datepicker" id="search_Effective_Date" name="search_Effective_Date" value="@Model.search_Effective_Date">
                                            <div class="validation-error">
                                                @Html.ValidationMessageFor(m => m.search_Effective_Date)
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4">
                                    <button type="submit" class="btn btn-default">@Resource.Filter</button>
                                </div>
                            </div>
                        }
                    </div>
                </section>

                <section class="tile color transparent-black">
                    <div class="tile-header transparent text-center">
                        <h1 class="">
                            <a class="btn btn-default" href="@Url.Action("Arrangement", "Time", new { search_Department_ID = Model.search_Department_ID, search_Effective_Date = DateUtil.ToDisplayDate(DateUtil.ToDate(Model.search_Effective_Date).Value.AddDays(-1))})">
                                <i class="fa fa-chevron-left fa-2x"></i>
                            </a>
                            <strong >
                                @DateUtil.ToDisplayFullDayOfweek(DateUtil.ToDate(Model.search_Effective_Date))
                               
                            </strong>
                            <a class="btn btn-default" href="@Url.Action("Arrangement", "Time", new { search_Department_ID = Model.search_Department_ID, search_Effective_Date = DateUtil.ToDisplayDate(DateUtil.ToDate(Model.search_Effective_Date).Value.AddDays(1))})">
                                <i class="fa fa-chevron-right fa-2x"></i>
                            </a>
                        </h1>
                        <div class="controls">
                            <a href="#" class="minimize"><i class="fa fa-chevron-down color-white"></i></a>
                        </div>
                    </div>
                    <div class="tile-body">
                        @using (Html.BeginForm("Arrangement", "Time", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                             @Html.AntiForgeryToken()
                  
                            var dayOfweek = (int)DateUtil.ToDate(Model.search_Effective_Date).Value.DayOfWeek;
                            <div class="table-responsive" style="overflow-x:auto">
                                <table class="table table-datatable table-custom" id="empDataTable">
                                    <thead>
                                        <tr>
                                            <th class="sort-alpha">@Resource.Name</th>
                                            @for (var i = 0; i <= 23; i++) //AM
                                            {
                                                <th class="text-center">@i.ToString("00")</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var row in Model.cEmplist)
                                        {
                                            var args = Model.argList.Where(w => w.Employee_Profile_ID == NumUtil.ParseInteger(row.Value));
                                            var times = new List<TimeArgPerHour>();
                                            foreach (var arg in args)
                                            {
                                                if (arg.Repeat.HasValue && arg.Repeat.Value && !string.IsNullOrEmpty(arg.Day_Of_Week))
                                                {
                                                    var dayOfweeks = arg.Day_Of_Week.Split('|');
                                                    if (!dayOfweeks.Contains("-1"))
                                                    {
                                                        if (!dayOfweeks.Contains(dayOfweek.ToString()))
                                                        {
                                                            continue;
                                                        }
                                                    }
                                                }
                                                if (arg.Time_From.HasValue & arg.Time_To.HasValue)
                                                {
                                                    var tfrom = arg.Time_From.Value.Hours;
                                                    var tTo = arg.Time_To.Value.Hours;

                                                    for (var i = tfrom; i <= tTo; i++)
                                                    {
                                                        times.Add(new TimeArgPerHour() { hour = i, Arg = arg });
                                                    }
                                                }
                                            }
                                            <tr>
                                                <td>
                                                    <a class="btn btn-default btn-block" onclick="AddArg_Onclick('@row.Value','@row.Text')">
                                                        <div class="profile-photo">
                                                            <img src="@Url.Content("~/images/avatar.jpg")" />
                                                        </div>
                                                        @**@
                                                        <div><i class="fa fa-plus color-greensea"></i> @row.Text</div>
                                                    </a>
                                                </td>
                                                @for (var i = 0; i <= 23; i++) //AM
                                                {
                                                    //  function EditArg_Onclick(tArgID, empID, empName, eff, rept, dayOfweek, tfrom, tTo, bid, remark) {
                                                    var tArg = times.Where(w => w.hour == i).FirstOrDefault();
                                                    if (tArg != null)
                                                    {
                                                        var arg = tArg.Arg;
                                                        var eff = DateUtil.ToDisplayDate(arg.Effective_Date);
                                                        var repeat = arg.Repeat.HasValue ? arg.Repeat.Value.ToString().ToLower() : "false";
                                                        var tfrom = DateUtil.ToDisplayTime(arg.Time_From);
                                                        var tTo = DateUtil.ToDisplayTime(arg.Time_To);
                                                        var bid = arg.Branch_ID.HasValue ? arg.Branch_ID.Value : 0;
                                                        <td class="border continuously highlight" onclick="EditArg_Onclick('@arg.Arrangement_ID', '@row.Value', '@row.Text','@eff',@repeat,'@arg.Day_Of_Week','@tfrom','@tTo','@bid','@arg.Remark')" title="@Resource.Edit">
                                                            <a>
                                                                <i class="fa fa-check color-green "></i>
                                                            </a>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="border continuously"></td>
                                                    }
                                                }

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </section>
            </div>
        </div>
        @{ Html.RenderPartial("_ArgDlg", Model); }
    </div>

}
