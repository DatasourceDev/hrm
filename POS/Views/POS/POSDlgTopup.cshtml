@using POS.Common;
@using POS.Models;
@using SBSModel.Common;
@using SBSModel.Models;

@model  POS.Models.POSMemberViewModel
@{

}
<script type="text/javascript">
    $(function () {
        $("#btnSaveTopup").click(function () {
            var pCredit = $('#Balance_Credits').val();

            var valid = true;
            if (ValidateDecimal('Balance_Credits', 'Credits', true) == false) {
                valid = false;
            }
            if (ValidateDecimal('Topup_Credits', 'Credits', true) == false) {
                valid = false;
            }

            if (valid == true) {
                $('#Credit').val(pCredit);

                var credit = toNumber(pCredit);
                if (parseFloat($('#Member_ID').val()) > 0) {
                    //edit
                    ShowProgress();
                    $.ajax({
                        url: '@Url.Action("Topup", "POS")',
                        //Passes the content of an input up
                        data: {
                            Member_ID: parseFloat($('#Member_ID').val()),
                            Credits: parseFloat(credit),
                        },
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (data.Code == '@ERROR_CODE.SUCCESS') {

                                $("#modal-topup").modal('hide');

                            }
                            else {
                                alert(data.Msg);
                            }
                            CloseProgress();
                        }
                    });
                }
                else
                {
                    $("#modal-topup").modal('hide');
                }
            }

        });

    });

    function TopupCredits_Onchange() {
        var tpcredit = parseFloat(toNumber($("#Topup_Credits").val()));
        var available = parseFloat(toNumber($("#Available_Credits").val()));

        if (!isNaN(tpcredit) && !isNaN(available)) {
            $("#Balance_Credits").val(formatCurrency(available + tpcredit));
        }
        else {
            $("#Balance_Credits").val(formatCurrency(available));
        }

    }

    function AfterNumber_Onclick() {
        TopupCredits_Onchange();
    }

</script>

<div class="main-content" style="color: #fff; ">
    <div class="container-fluid">
        <div class="row-fluid">
            <div id="modal-topup" class="modal hide fade" style="background-color: rgba(0,0,0,0.95);">
                <div class="modal-body">
                    <div class="row-fluid">
                        <div class="control-group text-center">
                            <label class="control-label" style="font-weight:600;font-size:20px;line-height:40px">Top Up</label>
                        </div>
                    </div>
                    <div class="row-fluid">
                        <div class="control-group">
                            <div class="span6">
                                <div class="row-fluid">
                                    <div class="control-group">
                                        @Html.Label("Available_Credits_Label", "Available Credits", new { @class = "control-label", style = "font-size:18px;" })
                                    </div>
                                    <div class="control-group">
                                        <div class="span9">
                                            @Html.TextBox("Available_Credits", "0.00", new { style = "width:90%;text-align:right;", Readonly = true })
                                            <div class="validation-error">
                                                <span id="Available_Credits_Err"></span>
                                            </div>
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.Currency_Code, new { Readonly = true })
                                        </div>

                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="control-group">
                                        @Html.Label("Topup_Credits_Label", "Top Up Credits", new { @class = "control-label", style = "font-size:18px;" })
                                    </div>
                                    <div class="control-group">
                                        <div class="span9">
                                            @Html.TextBox("Topup_Credits", "0.00", new { style = "width:90%;text-align:right;", @class = "bg-white", onchange = "TopupCredits_Onchange()" })
                                            <div class="validation-error">
                                                <span id="Topup_Credits_Err"></span>
                                            </div>
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.Currency_Code, new { Readonly = true })
                                        </div>

                                    </div>
                                </div>
                                <div class="row-fluid">
                                    <div class="control-group">
                                        @Html.Label("Balance_Credits_Label", "Balance Credits", new { @class = "control-label", style = "font-size:18px;" })
                                    </div>
                                    <div class="control-group">
                                        <div class="span9">
                                            @Html.TextBox("Balance_Credits", "0.00", new { style = "width:90%;text-align:right;", Readonly = true })
                                            <div class="validation-error">
                                                <span id="Balance_Credits_Err"></span>
                                            </div>
                                        </div>
                                        <div class="span3">
                                            @Html.TextBoxFor(m => m.Currency_Code, new { Readonly = true })
                                        </div>

                                    </div>
                                </div>

                            </div>

                            <div class="span6">
                                <div class="control-group">
                                    @{
                                        Html.RenderPartial("POSDlgNumber", new POSNumberViewModel()
                                        {
                                            Type = POSDlgType.Topup,
                                            Display_Label_ID = "Topup_Credits"
                                        });
                                    }
                                    <br />
                                    <br />
                                    <br />
                                    <br />
                                </div>

                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

    </div>
</div>